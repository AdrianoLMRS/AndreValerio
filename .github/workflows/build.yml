name: Build & Upload artifact

on:
  push:
    branches: [ main, internationalization ]
  workflow_dispatch:

jobs:
  build-and-up-artifact:
    runs-on: ubuntu-latest
    environment: deploy
    defaults:
      run:
        working-directory: ./website

    steps:
      - uses: actions/checkout@v4 # Clone the repo

      # Run Libretranslate w/ Docker
      - name: Start LibreTranslate
        run: |
          docker pull libretranslate/libretranslate:latest
          docker run -d --name libretranslate \
            -p 5000:5000 \
            -e LT_LOAD_ONLY=en,pt,pt-br,de,fr,es,it \
            libretranslate/libretranslate:latest

      - name: Wait for LibreTranslate
        run: |
          until curl --write-out '%{http_code}' --silent --output /dev/null http://localhost:5000/; do
            sleep 2
          done

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.11.0

      - name: Install dependencies
        run: npm ci

      - name: Build Astro site
        env:
          LIBRETRANSLATE: http://localhost:5000/
          PUBLIC_BASE_URL: ${{ vars.PUBLIC_BASE_URL }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
        run: npm run build

        # Need to upload because render.com will download the artifact to host
      - name: Upload dist as artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-dist
          path: ./website/dist

      - name: Stop LibreTranslate
        if: always()
        run: docker stop libretranslate

  notify:
    needs: build-and-up-artifact
    runs-on: ubuntu-latest
    environment: discord
    if: ${{ needs.build-and-up-artifact.result == 'success' }}

    steps:
      - name: Send Discord notification
        uses: stegzilla/discord-notify@v4
        with:
          webhook_url: ${{ secrets.BUILD }}
          username: "GHA build-artifact"
          title: "Build & Upload Artifact Success"
          message: |
            âœ… Build and artifact upload succeeded for **${{ github.repository }}**
            GHA run: #${{ github.run_number }}
            Artifact ID: ${{ steps.upload-artifact.outputs.artifact-id }}
            Artifact URL: ${{ steps.upload-artifact.outputs.artifact-url }}
            Artifact SHA: ${{ steps.upload-artifact.outputs.artifact-digest }}
