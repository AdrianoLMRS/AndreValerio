name: Build & Upload artifact

on:
  push:
    branches: [ main, internationalization ]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true    

jobs:
  build:
    runs-on: ubuntu-latest
    environment: deploy
    defaults:
      run:
        working-directory: ./website
    services:
      libretranslate:
        image: libretranslate/libretranslate:latest
        ports:
          - 5000:5000
        options: --env LT_LOAD_ONLY=en,pt,pt-br,de,fr,es,it
    timeout-minutes: 20
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}
      artifact-url: ${{ steps.upload.outputs.artifact-url }}
      artifact-digest: ${{ steps.upload.outputs.artifact-digest }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.11.0

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('website/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Wait for LibreTranslate
      run: |
        timeout 60 bash -c \
          'until curl --silent --output /dev/null --write-out "%{http_code}" http://localhost:5000/; do sleep 2; done'

    - name: Build Astro site
      env:
        LIBRETRANSLATE: http://localhost:5000/
        PUBLIC_BASE_URL: ${{ vars.PUBLIC_BASE_URL }}
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
      run: npm run build

    - name: Upload artifact
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: site-dist
        path: ./website/dist
        retention-days: 90

  notify:
    needs: build
    runs-on: ubuntu-latest
    environment: discord
    if: ${{ needs.build.result == 'success' }}

    steps:
      - name: Send Discord notification
        uses: stegzilla/discord-notify@v4
        with:
          webhook_url: ${{ secrets.BUILD }}
          username: "GHA build-artifact"
          title: "Build & Upload Artifact Success"
          message: |
            âœ… Build and artifact upload succeeded for **${{ github.repository }}**
            GHA run: #${{ github.run_number }}
            Artifact ID: ${{ needs.build.outputs.artifact-id }}
            Artifact URL: ${{ needs.build.outputs.artifact-url }}
            Artifact SHA: ${{ needs.build.outputs.artifact-digest }}