---

const { name, release_date, image, imageAlt, id  } = Astro.props

import { Image } from 'astro:assets';
import Imgs from '@data/imgs';

const albumURL = `https://open.spotify.com/album/${id}`;

---

<div class="album card">
    <h3 class="name">{ name }</h3>
    <div class="content">
        <div class="img-container">
            <Image
                src={image}
                alt={imageAlt}
                fit="cover"
                layout="full-width"
                inferSize
                {/* SEO */}
                itemtype="https://schema.org/image"
            />
        </div>
        <div class="middle">
            <button onclick="window.alert('WIP - In development')" type="button">
                ▶︎
                {/* TODO: Make a button that can play the album */}
            </button>              

            <a class="see-more"  href={albumURL} target="_blank" rel="noopener noreferrer">
                <span>See more</span>
            </a>
        </div>
        <div class="bottom">
            <div class="social">
                <div class="social-item">
                    <a href={albumURL} target="_blank" rel="noopener noreferrer">
                        <Image
                            src={Imgs.cdn.spotify}
                            alt="Spotify icon"
                            inferSize
                            itemtype="https://schema.org/image"
                        />
                    </a>
                </div>
            </div>
            <span>{release_date}</span>
        </div>
    </div>
</div>


<style lang="scss" >
    @use "@styles/variables" as v;
    @use 'sass:color';

    $playing-color: #1f1f1f;
    $playing-color-2: #282828;
    $border-color: var(--secondary-color);
    $button-size: 36px;

    $shadow-color: $playing-color-2;
    $shadow-color-light: color.adjust($color: $shadow-color, $whiteness: 25%);
    $shadow-color-lighter: color.adjust($color: $shadow-color, $whiteness: 22%, $alpha: -0.3);

    .album {
        max-width: 600px;
        h3 {
            text-align: center;
            font-size: clamp(1.5rem, 3vw, 2.5rem);
        }
        .content {
            border-radius: v.$normal-border-radius * 2;
            box-shadow: $shadow-color-light 0px 5px 15px;
            background-color: var(--black-color);
            padding: 20px;

            transition: box-shadow 300ms ease-in, background-color 300ms;

            &:hover {
                box-shadow: $shadow-color-lighter 0px 3px 8px;
                background-color: color.adjust($playing-color-2, $blackness: 20%);
            }

            .img-container {
                border: 3px solid $border-color;
                margin-bottom: 20px;
            }

            .middle {
                $padding: 20px;

                border: 2px solid $border-color;
                padding: $padding 20px $padding 20px;
                display: inline-flex;
                width: 100%;
                justify-content: space-between;
                align-items: center;
                line-height: 0;
                transition: background-color 100ms;

                &:hover {
                    background-color: $playing-color-2;
                }

                button {
                    all: unset;
                    // display: inline-flex;
                    // justify-content: center;
                    // align-items: center;
                    text-align: center;
                    padding: 10px;
                    border-radius: 50%;
                    font-size: $button-size;
                    height: $button-size;
                    width: $button-size;
                    color: var(--black-color);
                    background-color: var(--white-color);
                    cursor: pointer;
                }

                .see-more {
                    padding: 20px;
                    text-decoration: none;
                    color: var(--white-color);
                    border: 1px solid var(--white-color);
                    cursor: pointer;
                    border-radius: v.$normal-border-radius;
                    transition: background-color 300ms ease;
                    &:hover {
                        border: none;
                        background-color: var(--white-color);
                        font-weight: 600;
                        color: var(--black-color);
                    }
                }
            }
            .bottom {
                display: flex;
                justify-content: space-between;
                align-items: center;     
                padding-top: 20px;

                > span {
                    order: -1;
                    opacity: 0.3;
                }

                .social {
                    column-gap: 20px;
                    display: flex;
                    justify-content: end;
                    $scale: 24px;
    
    
                    .social-item {
                        position: relative; // Required to anchor ::before
    
                        &::before {
                            content: "";
                            position: absolute; // Correct for overlay/offset
                            left: -10px;
                            top: 50%; // Center vertically
                            transform: translateY(-50%); // Perfect centering
                            display: block;
                            width: 2px;
                            height: 100%; // Add height
                            z-index: 1;
                            background-color: $border-color;
                        }
                    }
                    img {
                        filter: invert(0.5);
                        max-height: $scale;
                        max-width: $scale;
                    }
                }
            }
        }

        @media only screen and (max-width: 260px) {
            .content {
                .middle {
                    // display: flex;
                    // flex-direction: column;
                    // height: auto;
                    flex-wrap: wrap;
                    button {
                        padding: $button-size;
                    }
                }
            }
        }
    }
</style>