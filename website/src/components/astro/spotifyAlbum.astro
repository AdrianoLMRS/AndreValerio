---

/* 
    Displays oEmbed Albums with Spotify API
*/

import SpotifyEmbed from "@components/ts/spotifyEmbed";
import { fetchOEmbedData } from "@utils/Spotify";

const { release_date, id, render = true } = Astro.props as { 
    release_date: string; 
    id: string; 
    render?: boolean; 
};

const oEmbedUrl = `https://open.spotify.com/oembed?url=https://open.spotify.com/album/${id}`;

const spotifyData = await fetchOEmbedData(oEmbedUrl);
// console.debug(spotifyData)

const margin : number = 300;
const marginPx = `${margin}px`;

---

<div class="album">
    {render ? (
      <div>
        <h3>{spotifyData.title}</h3>
        <p>{release_date}</p>
      </div>
    ) : null}
    <div class="spotify-wrapper box-sh">
        <SpotifyEmbed html={spotifyData.html} client:visible={{ rootMargin: marginPx }} >
            <div slot='loading' class="loading-skeleton"></div>
        </SpotifyEmbed>
    </div>
</div>

<style lang="scss">
    @use '@styles/variables' as v;

    .spotify-wrapper {
        overflow: hidden;
        border-radius: 12px;
        --_height: 600px;
        :global(iframe) {
            height: 600px !important;
            border-radius: inherit !important;
        }
    }
</style>

{/* Style for loading animation  */}
<style lang="scss" is:global > @forward "@styles/_components/Loading"; </style>