---

import SpotifyEmbed from "@components/astro/spotifyAlbum.astro"

import { author } from "@data/author"
const { spotifyId } = author // André Valério artist ID

import { getSpotifyToken } from "@utils/Spotify"
import type { Album as albumType, AlbumResponse } from "@types/albumTypes"

// Spotify Access token for API calls
const accessToken = await getSpotifyToken();

const market = "BR" // Example: BR+ES
const limit = "6"

const ALBUM_URL = `https://api.spotify.com/v1/artists/${spotifyId}/albums?market=${market}&limit=${limit}`

const fetchAlbums = async (): Promise<AlbumResponse> => {
    const response = await fetch(ALBUM_URL, {
        method: "GET",
        headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Content-Type': 'application/json',
        },
    });

    if (!response.ok) {
        if (response.status === 401) {
            throw new Error('Unauthorized - Token may be expired or invalid. Please check your authentication.')
        } else throw new Error('Error searching albums')
    };

    return await response.json(); // Response
  };

const albums = await fetchAlbums();
console.log(albums);

---

<div>
    {albums.items && albums.items.length > 0 ? (
    <ul>
        {albums.items.map((album: albumType) => (
        <li>
            <SpotifyEmbed 
                name={album.name}
                release_date={album.release_date}
                id={album.id}
            />
        </li>
        ))}
    </ul>
    ) : (
    <p>No albums available...</p>
    )}
</div>