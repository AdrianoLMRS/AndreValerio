---
/*
    Get artist albums + and display using oEmbed
*/

import SpotifyEmbed from "@components/astro/spotifyAlbum.astro"

import { author } from "@data/constants/author"
const { spotifyId } = author // André Valério artist ID

import { formatArtistName } from "@utils/Album";
import { fetchAlbums } from "@utils/Spotify"
import type { Album as albumType } from "@types/albumTypes"

const limit = String(6); // Max: 50

const disallowed : string[] = ["6gVncgomPUoXXQHvWzpRT0", "1rh9eVIKx8c5UFhpa0aCoo", "5pgYtorr2Xf7xRZqclhTT4", "4b4NdiFLO7q836YIPA59jl"];

const ALBUM_URL = `https://api.spotify.com/v1/artists/${spotifyId}/albums?limit=${limit}`

const albums = await fetchAlbums(ALBUM_URL);
// console.debug(albums);

---

<div>
    {albums.items && albums.items.length > 0 ? (
      <ul translate="no" aria-labelledby="Albums">
        <meta itemprop="numTracks" content={albums.items.filter((album) => !disallowed.includes(album.id)).length.toString()} />
  
        {albums.items
            .filter((album) => !disallowed.includes(album.id))
            .map((album) => (
                <li
                    itemprop="track"
                    itemscope
                    itemtype="https://schema.org/MusicAlbum"
                    aria-label={`Album ${album.name} by ${formatArtistName(album.artists.map((artist) => artist.name))}`}
                >
                <meta itemprop="name" content={album.name} />
                <meta itemprop="byArtist" content={formatArtistName(album.artists.map((artist) => artist.name))} />
                <meta itemprop="datePublished" content={album.release_date} />
    
                <SpotifyEmbed
                    name={album.name}
                    release_date={album.release_date}
                    id={album.id}
                />
            </li>
          ))}
      </ul>
    ) : (
      <p>No albums available...</p>
    )}
</div>  
  