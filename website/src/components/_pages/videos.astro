---
import Apresentation from "@components/astro/Apresentation.astro"

import Imgs from '@data/imgs';
import { author } from '@data/author';

// Youtube
import YoutubeEmbed from "@components/ts/spotifyEmbed.tsx"

import rawVideos from '@data/videos.json';
import rawFeaturedVideos from '@data/featuredVideos.json';

const videos: { id: string; title: string }[] = rawVideos.map(({ id, title }) => ({ id, title }));
const featuredVideos: { id: string; title: string }[] = rawFeaturedVideos.map(({ id, title }) => ({ id, title }));

const style = { height1: '315', height2: '100%', width: '100%' };
---

<main

>
    <Apresentation src={Imgs.cdn.banner3} alt={`${author.name} (Banner) 3`} html={`Videos & Movies`} />
    <section
        class="videos"
        id="videos"
    >
        <h2>Videos & Movies</h2>
        <p>Explore a collection of videos and movies featuring {author.name}.</p>

        <section class="featured" id="featured" >
            <h3>Featured videos</h3>

            {featuredVideos.length > 0 ? (
                <div class="videos-wrapper">
                    {featuredVideos.map(video => (
                        <div class="iframe-wrapper">
                            <iframe class="box-sh"
                                src={`https://www.youtube.com/embed/${video.id}`}
                                title={`${video.title}`}
                                loading="lazy"
                                frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen
                            />
                        </div>
                    ))}
                </div>
            ) : (
                <p class="error-p" >No videos found...</p>
            )}

        </section>

        <section class="latest" id="latest" >
            {/* TODO: Store fetch in a .json file and update only 1 time/day */}
            <h3>Latest videos</h3>

            {videos.length > 0 ? (
                <div class="videos-wrapper">
                    {videos.map(video => (
                        <div class="iframe-wrapper box-sh">
                            <YoutubeEmbed client:visible={{ rootMargin: '300px' }} 
                                wrapperClass="youtube-embed"
                                html={`<iframe width="${style.width}" height="${style.height1}" src="https://www.youtube.com/embed/${video.id}" title="${video.title}" loading="lazy" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>`}
                            >
                                <div slot="loading" class="loading-skeleton" />
                            </YoutubeEmbed>
                        </div>
                    ))}
                </div>
            ) : (
                <p class="error-p" >Sorry, no videos found...</p>
            )}
        </section>
    </section>
    
</main>

<style lang="scss" define:vars={{ height: `${style.height1}px`, }} is:global >
    @forward "@styles/_components/Loading";
    @forward "@styles/_components/box-sh";

    main > section:not(.apresentation), main .videos > section { padding: 20px 0; }

    .error-p { color: var(--color-error, yellow) !important; opacity: .8; }

    .videos-wrapper {
        padding: 25px 15px;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        --_height: var(--height);
    }

    .videos {
        text-align: center;

        h2 { font-size: 2.5rem; }
        & > p { font-size: 1.2rem; }
        h3 { font-size: 1.8rem; }

        .featured {
            .videos-wrapper {
                .iframe-wrapper {
                    width: 100%;
                    max-width: 600px;

                    iframe {
                        width: 100%;
                        min-width: 250px;
                        height: var(--_height);
                    }
                }
            }
        }
    }
</style>