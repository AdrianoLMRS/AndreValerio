---
import Apresentation from "@components/astro/Apresentation.astro"

import Imgs from '@data/imgs';
import { author } from '@data/author';

// Youtube
import YoutubeEmbed from "@components/ts/spotifyEmbed.tsx"
import { getLatestVideos } from "@utils/Youtube";

const API_KEY = import.meta.env.YOUTUBE_API_KEY;
const CHANNEL_ID = `${author.youtubeId}`;

let videos: { id: string; title: string }[] = [];
try {
    videos = await getLatestVideos(CHANNEL_ID, API_KEY, 5);
} catch (error) {
    videos = [];
    console.error("Failed to fetch youtube videos..." + "\nError:  " + error);
}

---

<main

>
    <Apresentation src={Imgs.cdn.banner3} alt={`${author.name} (Banner) 3`} html={`Videos & Movies`} />
    <section
        class="videos"
        id="videos"
    >
        <h2>Videos & Movies</h2>
        <p>Explore a collection of videos and movies featuring {author.name}.</p>

        <section class="latest" id="latest" >
            <h3>Latest videos</h3>

            {videos.length > 0 ? (
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {videos.map(video => (
                        <YoutubeEmbed
                            client:visible={{ rootMargin: '300px' }}
                            html={`<iframe width="560" height="315" src="https://www.youtube.com/embed/${video.id}" title="${video.title}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>`}
                        >
                            <div slot="loading" class="loading-skeleton" />
                        </YoutubeEmbed>
                    ))}
                </div>
            ) : (
                <p>No videos found.</p>
            )}
        </section>
    </section>
    
</main>

<style lang="scss" >

</style>