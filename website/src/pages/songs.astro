---
import { author } from '@data/author';
import Pages from '@data/pages';
import Imgs from '@data/imgs';
import { fetchAlbums } from '@utils/Spotify';
import { formatAlbums } from '@utils/Album';

// * Components
import Layout from '@layouts/Normal.astro';
import MainContent from '@components/_pages/songs.astro';

// * Types
import type { Props as seoProps } from "astro-seo";

const Shared = {
    title: `Songs & Albums â€“ ${author.name}`,
    description: `Explore the music of ${author.name}, including his latest songs and albums.`,
    url: `${import.meta.env.SITE}${Pages.songs}`,
    image: Imgs.local.banner4.url,
};

const spotifyURL = `https://api.spotify.com/v1/artists/${author.spotifyId}/albums?include_groups=single,album,appears_on&limit=10`;
const albums = await fetchAlbums(spotifyURL); // Should return { items: [...] }

const disallowed: string[] = ["6gVncgomPUoXXQHvWzpRT0"];
const albumsSchema = formatAlbums(albums, disallowed);

const seo: seoProps = {
    title: Shared.title,
    description: Shared.description,
    canonical: Shared.url,
    twitter: {
        card: 'summary_large_image',
        site: Pages.social.arroba.twitter,
        creator: Pages.social.arroba.twitter,
        title: Shared.title,
        description: Shared.description,
        image: Shared.image,
        imageAlt: `${author.name} portrait`
    },
    openGraph: {
        basic: {
            title: Shared.title,
            url: Shared.url,
            image: `${Shared.image}`,
            type: 'profile'
        },
        image: {
            url: Shared.image,
            secureUrl: Shared.image,
            alt: `${author.name} portrait`,
            type: `image/${Imgs.local.banner4.format}`,
            width: Number(Imgs.local.banner4.width),
            height: Number(Imgs.local.banner4.height)
        },
        optional: {
            siteName: `${author.name}`,
            description: Shared.description,
            locale: 'en_CA'
        }
    }
};

const schema = {
    item: {
        '@context': 'https://schema.org',
        '@graph': [
            { '@type': 'WebPage', name: Shared.title, description: Shared.description, url: Shared.url },
            {
                '@type': 'MusicPlaylist',
                name: `${author.name} Latest Releases & Songs`,
                description: Shared.description,
                url: Shared.url,
            },
            {albums: albumsSchema,}
        ]
    }
};
---

<Layout seo={seo} schema={schema} >
    <MainContent />
</Layout>